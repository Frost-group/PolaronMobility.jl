var documenterSearchIndex = {"docs":
[{"location":"functions/#Functions","page":"Functions","title":"Functions","text":"","category":"section"},{"location":"functions/","page":"Functions","title":"Functions","text":"Modules = [PolaronMobility]\nOrder   = [:type, :function]","category":"page"},{"location":"functions/#PolaronMobility.Polaron","page":"Functions","title":"PolaronMobility.Polaron","text":"Polaron(x...)\n\nType for storing the polaron information, x....\n\n\n\n\n\n","category":"type"},{"location":"functions/#PolaronMobility.A-NTuple{4, Any}","page":"Functions","title":"PolaronMobility.A","text":"A(v, w, β)\n\nHellwarth's A expression from Eqn. (62b) in Hellwarth et al. 1999 PRB. Part of the overall free energy expression.\n\nSee Hellwarth et a. 1999: https://doi.org/10.1103/PhysRevB.60.299.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.A-Tuple{Vector, Vector, Any, Any}","page":"Functions","title":"PolaronMobility.A","text":"A(v, w, β)\n\nGeneralisation of the A function from Eqn. (62b) in Hellwarth et al. 1999. This is the Helmholtz free energy of the trial model.\n\nRequired for calculating the polaron free energy.\n\nArguments\n\nv::Vector{Float64}: is a vector of the v variational parameters.\nw::Vector{Float64}: is a vector of the w variational parameters.\nβ::Union{Float64, Vector{Float64}}: is the reduced thermodynamic temperature ħωⱼ/(kT) associated with the 'jth' phonon mode.\n\nSee Hellwarth, R. W., Biaggio, I. (1999): https://doi.org/10.1103/PhysRevB.60.299.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.A-Tuple{Vector, Vector, Any}","page":"Functions","title":"PolaronMobility.A","text":"A(v, w, n)\n\nCalculates A(v, w, β) but at zero-temperature, β = Inf.\n\nArguments\n\nv::Vector{Float64}: is a vector of the v variational parameters.\nw::Vector{Float64}: is a vector of the w variational parameters.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.B-NTuple{4, Any}","page":"Functions","title":"PolaronMobility.B","text":"B(v, w, α)\n\nIntegral of Eqn. (31) in Feynman 1955. Part of the overall ground-state energy expression.\n\nSee Feynman 1955: http://dx.doi.org/10.1103/PhysRev.97.660.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.B-NTuple{5, Any}","page":"Functions","title":"PolaronMobility.B","text":"B(v, w, β, α)\n\nHellwarth's B expression from Eqn. (62c) in Hellwarth et al. 1999 PRB. Part of the overall free energy expression.\n\nSee Hellwarth et a. 1999: https://doi.org/10.1103/PhysRevB.60.299.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.B-Tuple{Vector, Vector, Any, Any, Any}","page":"Functions","title":"PolaronMobility.B","text":"B(v, w, α, β)\n\nGeneralisation of the B function from Eqn. (62c) in Hellwarth et al. 1999. This is the expected value of the exact action <S_j> taken w.r.t trial action, given for the 'jth' phonon mode.\n\nRequired for calculating the polaron free energy.\n\nArguments\n\nv::Vector{Float64}: is a vector of the v variational parameters.\nw::Vector{Float64}: is a vector of the w variational parameters.\nα::Union{Float64, Vector{Float64}}: is the partial dielectric electron-phonon coupling parameter for the 'jth' phonon mode.  \nβ::Union{Float64, Vector{Float64}}: is the reduced thermodynamic temperature ħωⱼ/(kT) associated with the 'jth' phonon mode.\n\nSee Hellwarth, R. W., Biaggio, I. (1999): https://doi.org/10.1103/PhysRevB.60.299.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.B-Tuple{Vector, Vector, Any, Any}","page":"Functions","title":"PolaronMobility.B","text":"B(v, w, α; rtol = 1e-3)\n\nCalculates B(v, w, α, β) but at zero-temperature, β = Inf.\n\nArguments\n\nv::Vector{Float64}: is a vector of the v variational parameters.\nw::Vector{Float64}: is a vector of the w variational parameters.\nα::Union{Float64, Vector{Float64}}: is the partial dielectric electron-phonon coupling parameter for the 'jth' phonon mode.  \n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.B_integrand-Tuple{Any, Any, Any}","page":"Functions","title":"PolaronMobility.B_integrand","text":"B(τ, v, w)\n\nIntegrand of Eqn. (31) in Feynman 1955. Part of the overall ground-state energy expression.\n\nSee Feynman 1955: http://dx.doi.org/10.1103/PhysRev.97.660.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.C-NTuple{4, Any}","page":"Functions","title":"PolaronMobility.C","text":"C(v, w, β)\n\nHellwarth's C expression from Eqn. (62e) in Hellwarth et al. 1999 PRB. Part of the overall free energy expression.\n\nSee Hellwarth et a. 1999: https://doi.org/10.1103/PhysRevB.60.299.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.C-Tuple{Vector, Vector, Any, Any}","page":"Functions","title":"PolaronMobility.C","text":"C(v, w, β)\n\nGeneralisation of the C function from Eqn. (62e) in Hellwarth et al. 1999. This is the expected value of the trial action <S_0> taken w.r.t trial action.\n\nRequired for calculating the polaron free energy.\n\nArguments\n\nv::Vector{Float64}: is a vector of the v variational parameters.\nw::Vector{Float64}: is a vector of the w variational parameters.\nβ::Union{Float64, Vector{Float64}}: is the reduced thermodynamic temperature ħωⱼ/(kT) associated with the 'jth' phonon mode.\n\nSee Hellwarth, R. W., Biaggio, I. (1999): https://doi.org/10.1103/PhysRevB.60.299.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.C-Tuple{Vector, Vector, Any}","page":"Functions","title":"PolaronMobility.C","text":"C(v, w)\n\nCalculates C(v, w, β) but at zero-temperature, β = Inf.\n\nArguments\n\nv::Vector{Float64}: is a vector of the v variational parameters.\nw::Vector{Float64}: is a vector of the w variational parameters.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.C_ij-Tuple{Any, Any, Vector, Vector}","page":"Functions","title":"PolaronMobility.C_ij","text":"C_ij(i, j, v, w)\n\nCalculates the element to the coupling matrix C_ij (a generalisation of Feynman's C coupling variational parameter in Feynman 1955) between the electron and the ith' andjth' fictitious masses that approximates the exact electron-phonon interaction with a harmonic coupling to a massive fictitious particle. \n\nRequired for calculating the polaron free energy.\n\nNote: Not to be confused with the number of physical phonon branches; many phonon branches could be approximated with one or two etc. fictitious masses for example. The number of fictitious mass does not necessarily need to match the number of phonon branches.\n\nArguments\n\ni::Integer, j::Integer: enumerate the current fictitious masses under focus (also the index of the element in the coupling matrix C)\nv::Vector{Float64}: is a vector of the v variational parameters.\nw::Vector{Float64}: is a vector of the w variational parameters.\n\nSee Feynman 1955: http://dx.doi.org/10.1103/PhysRev.97.660.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.D-Tuple{Any, Vector, Vector, Any, Any}","page":"Functions","title":"PolaronMobility.D","text":"D(τ, v, w, β)\n\nCalculates the recoil function (a generalisation of D(u) in Eqn. (35c) in FHIP 1962) that approximates the exact influence (recoil effects) of the phonon bath on the electron with the influence of the fictitious masses attached by springs to the electron. It appears in the exponent of the intermediate scattering function.\n\nArguments\n\nτ::Float64: is the imaginary time variable.\nv::Vector{Float64}: is a vector of the v variational parameters.\nw::Vector{Float64}: is a vector of the w variational parameters.\nβ::Union{Float64, Vector{Float64}}: is the reduced thermodynamic temperature ħωⱼ/(kT) associated with the 'jth' phonon mode.\n\nSee FHIP 1962: https://doi.org/10.1103/PhysRev.127.1004.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.D-Tuple{Any, Vector, Vector}","page":"Functions","title":"PolaronMobility.D","text":"D(τ, v, w)\n\nCalculates the recoil function at zero-temperature.\n\nArguments\n\nτ::Float64: is the imaginary time variable.\nv::Vector{Float64}: is a vector of the v variational parameters.\nw::Vector{Float64}: is a vector of the w variational parameters.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.F-NTuple{4, Any}","page":"Functions","title":"PolaronMobility.F","text":"F(v, w, α, ω)\n\nCalculates the zero-temperature ground-state energy of the polaron for a material with multiple phonon branches. Similar to F(v, w, α, ω, β) but with β = Inf. Generalises Eqn. (33) in Feynman 1955.\n\nArguments\n\nv::Vector{Float64}: is a vector of the v variational parameters.\nw::Vector{Float64}: is a vector of the w variational parameters.\nα::Union{Float64, Vector{Float64}}: is the partial dielectric electron-phonon coupling parameter for the 'jth' phonon mode.  \nω::Union{Float64, Vector{Float64}}: phonon mode frequencies (2π THz). \n\nSee Feynman 1955: http://dx.doi.org/10.1103/PhysRev.97.660.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.F-NTuple{5, Any}","page":"Functions","title":"PolaronMobility.F","text":"F(v, w, α, ω, β)\n\nCalculates the Helmholtz free energy of the polaron for a material with multiple phonon branches. \n\nThis generalises the Osaka 1959 (below Eqn. (22)) and Hellwarth. et al 1999 (Eqn. (62a)) free energy expressions.\n\nArguments\n\nv::Vector{Float64}: is a vector of the v variational parameters.\nw::Vector{Float64}: is a vector of the w variational parameters.\nα::Union{Float64, Vector{Float64}}: is the partial dielectric electron-phonon coupling parameter for the 'jth' phonon mode.  \nω::Union{Float64, Vector{Float64}}: phonon mode frequencies (2π THz).\nβ::Union{Float64, Vector{Float64}}: is the reduced thermodynamic temperature ħωⱼ/(kT) associated with the 'jth' phonon mode.\n\nSee Osaka, Y. (1959): https://doi.org/10.1143/ptp.22.437 and Hellwarth, R. W., Biaggio, I. (1999): https://doi.org/10.1103/PhysRevB.60.299.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.FHIP_mobility_lowT-NTuple{5, Any}","page":"Functions","title":"PolaronMobility.FHIP_mobility_lowT","text":"FHIP_mobility_lowT(v, w, α, ω, β)\n\nFHIP mobility in the low-temperature approximation.\n\nSee also inverse_FHIP_mobility_lowT\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.HellwarthAScheme-Tuple{Any}","page":"Functions","title":"PolaronMobility.HellwarthAScheme","text":"HellwarthAScheme(phonon_modes; T=295, convergence=1e-6)\n\nMultiple phonon mode reduction to a single effective frequency. Temperature dependent, defaults to T = 295 K.\n\nSolved iteratively by bisection until Δfreq < convergence.\n\nFollows Hellwarth et al. 1999 PRB 'A' scheme, Eqn. (50) RHS.\n\nSee Hellwarth et a. 1999: https://doi.org/10.1103/PhysRevB.60.299.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.HellwarthBScheme-Tuple{Any}","page":"Functions","title":"PolaronMobility.HellwarthBScheme","text":"HellwarthBScheme(LO)\n\nLO an array assumed to be of [freq ; absolute ir activity]\n\nMultiple phonon mode reduction to a single effective frequency. Hellwarth et al. 1999 PRB, 'B scheme'; the athermal method.  Averaging procedure is constructed by considering the average effect of the action of multiple branches.\n\nFollows Eqn. (58) in this paper, assuming typo on LHS, should actually be W_e.\n\nSee Hellwarth et a. 1999: https://doi.org/10.1103/PhysRevB.60.299.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.Hellwarth_mobility-NTuple{5, Any}","page":"Functions","title":"PolaronMobility.Hellwarth_mobility","text":"Hellwarth_mobility(v, w, α, ω, β)\n\nThe Hellwarth polaron mobility.\n\nSee also inverse_Hellwarth_mobility\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.Kadanoff_mobility_lowT-NTuple{5, Any}","page":"Functions","title":"PolaronMobility.Kadanoff_mobility_lowT","text":"Kadanoff_mobility_lowT(v, w, α, ω, β)\n\nKadanoff mobility in the low-temperature approximation.\n\nSee also inverse_Kadanoff_mobility_lowT\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.Y-NTuple{4, Any}","page":"Functions","title":"PolaronMobility.Y","text":"Y(x, v, β)\n\nHellwarth's Y expression from Eqn. (62d) in Hellwarth et al. 1999 PRB. Part of the overall free energy expression. Contained in denominator of the integrand of Eqn. (62c).\n\nSee Hellwarth et a. 1999: https://doi.org/10.1103/PhysRevB.60.299.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.addunits!-Tuple{Material}","page":"Functions","title":"PolaronMobility.addunits!","text":"addunits!(polaron::Material)\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.addunits!-Tuple{Polaron}","page":"Functions","title":"PolaronMobility.addunits!","text":"addunits!(polaron::Polaron)\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.cartesian_k_integral-Tuple{Any, Any}","page":"Functions","title":"PolaronMobility.cartesian_k_integral","text":"Integral over first Brillioun Zone in cartesian coordinates.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.cartesian_k_integrand-Tuple{Any, Any, Any}","page":"Functions","title":"PolaronMobility.cartesian_k_integrand","text":"Integrand for a k-space integral in cartesian coordinates.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.effective_freqs-Tuple{Any, Any}","page":"Functions","title":"PolaronMobility.effective_freqs","text":"effective_freqs(freqs_and_ir_activity, num_var_params)\n\nGenerates a matrix of effective phonon modes with frequencies and infra-red activities derived from a larger matrix using the Principal Component Analysis (PCA) method.\n\nArguments\n\nfreqs_and_ir_activity::Matrix{Float64}: is a matrix containing the phonon mode frequencies (in THz) in the first column and the infra-red activities (in e²amu⁻¹) in the second column.\nnum_var_params::Integer: is the number of effective modes required (which needs to be less than the number of modes in freqs_and_ir_activity`).\n\n*** POSSIBLY REDUNDANT ***\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.electron_energy-NTuple{4, Any}","page":"Functions","title":"PolaronMobility.electron_energy","text":"Energy associated with the free electron at finite temperature.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.electron_energy-Tuple{Any, Any, Any}","page":"Functions","title":"PolaronMobility.electron_energy","text":"Energy associated with the free electron at zero temperature.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.f-NTuple{5, Any}","page":"Functions","title":"PolaronMobility.f","text":"f(x, v, w, β)\n\nIntegrand of Hellwarth's B expression from Eqn. (62c) in Hellwarth et al. 1999 PRB. Part of the overall free energy expression.\n\nSee Hellwarth et a. 1999: https://doi.org/10.1103/PhysRevB.60.299.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.feynmanvw-Tuple{Vector, Vector, Vararg{Any}}","page":"Functions","title":"PolaronMobility.feynmanvw","text":"feynmanvw(v, w, αωβ...; upper_limit = Inf64)\n\nMinimises the multiple phonon mode free energy function for a set of vₚ and wₚ variational parameters. The variational parameters follow the inequality: v₁ > w₁ > v₂ > w₂ > ... > vₙ > wₙ. Generalises feynmanvw to multiple variational parameters.\n\nArguments\n\nv::Vector{Float64}: vector of initial v parameters.\nw::Vector{Float64}: vector of initial w parameters.\nα::Union{Float64, Vector{Float64}}: is the partial dielectric electron-phonon coupling parameter for one or many phonon modes.  \nω::Union{Float64, Vector{Float64}}: phonon mode frequencies (2π THz) for one or many phonon modes.\nβ::Union{Float64, Vector{Float64}}: is the reduced thermodynamic temperature ħωⱼ/(kT) for one or many phonon modes.\n\nSee also F.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.frohlich_coupling-Tuple{Any, Any, Any}","page":"Functions","title":"PolaronMobility.frohlich_coupling","text":"Electron-phonon coupling matrix for the Frohlich model.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.frohlich_energy_k_space-Tuple{Any, Any, Any, Vararg{Any}}","page":"Functions","title":"PolaronMobility.frohlich_energy_k_space","text":"Total free energy for the Frohlich model.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.frohlich_interaction_energy_integrand_k_space-NTuple{5, Any}","page":"Functions","title":"PolaronMobility.frohlich_interaction_energy_integrand_k_space","text":"Integrand for imaginary time integral for the frohlich interaction energy at zero temperature.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.frohlich_interaction_energy_integrand_k_space-NTuple{6, Any}","page":"Functions","title":"PolaronMobility.frohlich_interaction_energy_integrand_k_space","text":"Integrand for imaginary time integral for the frohlich interaction energy at finite temperature.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.frohlich_interaction_energy_k_space-NTuple{4, Any}","page":"Functions","title":"PolaronMobility.frohlich_interaction_energy_k_space","text":"Electron-phonon interaction energy for the Frohlich mode at zero temperature.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.frohlich_interaction_energy_k_space-NTuple{5, Any}","page":"Functions","title":"PolaronMobility.frohlich_interaction_energy_k_space","text":"Electron-phonon interaction energy for the Frohlich model at finite temperature.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.frohlich_memory_function_k_space-NTuple{5, Any}","page":"Functions","title":"PolaronMobility.frohlich_memory_function_k_space","text":"Memory function for the Frohlich model at zero temperature.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.frohlich_memory_function_k_space-NTuple{6, Any}","page":"Functions","title":"PolaronMobility.frohlich_memory_function_k_space","text":"Memory function for the Frohlich model with temperature dependence.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.frohlich_mobility_k_space-NTuple{5, Any}","page":"Functions","title":"PolaronMobility.frohlich_mobility_k_space","text":"DC Mobility for the Frohlich model.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.frohlich_structure_factor_k_space-NTuple{5, Any}","page":"Functions","title":"PolaronMobility.frohlich_structure_factor_k_space","text":"The Dynamical Structure Factor for the Frohlich model at zero temperature.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.frohlich_structure_factor_k_space-NTuple{6, Any}","page":"Functions","title":"PolaronMobility.frohlich_structure_factor_k_space","text":"The Dynamical Structure Factor for the Frohlich model with temperature dependence.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.frohlichalpha-NTuple{4, Any}","page":"Functions","title":"PolaronMobility.frohlichalpha","text":"frohlichalpha(ε_Inf, ε_S, freq, m_eff)\n\nCalculates the Frohlich alpha parameter, for a given dielectric constant, frequency (f) of phonon in Hertz, and effective mass (in units of the bare electron mass).\n\nSee Feynman 1955: http://dx.doi.org/10.1103/PhysRev.97.660.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.frohlichalpha-NTuple{5, Any}","page":"Functions","title":"PolaronMobility.frohlichalpha","text":"frohlichalpha(ϵ_optic, ϵ_ionic, ϵ_total, phonon_mode_freq, m_eff)\n\nCalculates the partial dielectric electron-phonon coupling parameter for a given longitudinal optical phonon mode. \n\nThis decomposes the original Frohlich alpha coupling parameter (defined for a single phonon branch) into contributions from multiple phonon branches.\n\nArguments\n\nϵ_optic::Float64: is the optical dielectric constant of the material.\nϵ_ionic::Float64: is the ionic dielectric contribution from the phonon mode.\nϵ_total::Float64: is the total ionic dielectric contribution from all phonon modes of the material.\nphonon_mode_freq::Float64: is the frequency of the phonon mode (THz).\nm_eff::Float64 is the band mass of the electron (in units of electron mass m_e).\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.general_memory_function-Tuple{Any, Any}","page":"Functions","title":"PolaronMobility.general_memory_function","text":"general_memory_function(Ω, structure_factor; limits = [0, Inf])\n\nThis function calculates the integral of a given structure factor with respect to time using the quadgk function from the QuadGK package.\n\nArguments\n\nΩ: A scalar representing the frequency.\nstructure_factor: A function that returns the value of the structure factor at a given time.\nlimits (optional): A 2-element array specifying the lower and upper limits of integration. Default is [0, Inf].\n\nReturns\n\nThe integral of the structure factor with respect to time.\n\nExample\n\n# Define a structure factor function\nfunction structure_factor(t)\n    # Implementation of the structure factor\n    # ...\nend\n\n# Calculate the memory function for a given frequency and structure factor\nΩ = 0.5\nlimits = [0, 10]\nresult = general_memory_function(Ω, structure_factor; limits = limits)\nprintln(result)\n\nThis example demonstrates how to use the general_memory_function to calculate the memory function for a given frequency Ω and structure factor function structure_factor. The limits argument is optional and specifies the lower and upper limits of integration. The result is then printed.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.general_memory_function-Tuple{Any}","page":"Functions","title":"PolaronMobility.general_memory_function","text":"general_memory_function(structure_factor; limits = [0, Inf])\n\nCalculate the integral of a given function structure_factor using the quadgk function in Julia.\n\nArguments\n\nstructure_factor: A function that takes a single argument t and returns a value.\nlimits: An optional array specifying the lower and upper limits of integration. Default is [0, Inf].\n\nReturns\n\nintegral: The result of the numerical integration of the function structure_factor over the specified limits.\n\nExample\n\n# Define the structure factor function\nfunction structure_factor(t)\n    return t^2 + 2t + 1\nend\n\n# Call the general_memory_function with the structure_factor function\nresult = general_memory_function(structure_factor; limits = [0, 10])\n\nprintln(result)  # Output: 383.3333333333333\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.h_i-Tuple{Any, Vector, Vector}","page":"Functions","title":"PolaronMobility.h_i","text":"h_i(i, v, w)\n\nCalculates the normal-mode (the eigenmodes) frequency of the coupling between the electron and the `ith' fictitious mass that approximates the exact electron-phonon interaction with a harmonic coupling to a massive fictitious particle. \n\nRequired for calculating the polaron free energy.\n\nNote: Not to be confused with the number of physical phonon branches; many phonon branches could be approximated with one or two etc. fictitious masses for example. The number of fictitious mass does not necessarily need to match the number of phonon branches.\n\nArguments\n\ni::Integer: enumerates the current fictitious mass.\nv::Vector{Float64}: is a vector of the v variational parameters.\nw::Vector{Float64}: is a vector of the w variational parameters.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.holstein_coupling-Tuple{Any, Any, Any}","page":"Functions","title":"PolaronMobility.holstein_coupling","text":"Electron-phonon coupling matrix for the Holstein model.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.holstein_energy-Tuple{Any, Any, Any, Vararg{Any}}","page":"Functions","title":"PolaronMobility.holstein_energy","text":"Total free energy for the Holstein model. Here the k-space integral is evaluated analytically.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.holstein_energy_k_space-Tuple{Any, Any, Any, Vararg{Any}}","page":"Functions","title":"PolaronMobility.holstein_energy_k_space","text":"Total free energy for the Holstein model.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.holstein_interaction_energy-NTuple{4, Any}","page":"Functions","title":"PolaronMobility.holstein_interaction_energy","text":"holstein_interaction_energy(v, w, α, ω; dims = 3)\n\nCalculate the interaction energy between electrons and phonons in the Holstein model.\n\nArguments\n\nv: A scalar representing a variational parameter.\nw: A scalar representing a variational parameter.\nα: A scalar representing the electron-phonon coupling.\nω: A scalar representing the adiabaticity.\ndims: An optional parameter representing the number of dimensions (default is 3).\n\nReturns\n\nintegral: The interaction energy between electrons and phonons in the Holstein model.\n\nExample\n\nv = 0.2\nw = 0.1\nα = 0.5\nω = 0.3\nresult = holstein_interaction_energy(v, w, α, ω)\nprintln(result)\n\nThis example calculates the interaction energy for given values of v, w, α, and ω. The result is then printed.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.holstein_interaction_energy-NTuple{5, Any}","page":"Functions","title":"PolaronMobility.holstein_interaction_energy","text":"holstein_interaction_energy(v, w, α, ω, β; dims = 3)\n\nElectron-phonon interaction energy for the Holstein mode at finite temperature. Here the k-space integral is evaluated analytically.\n\nArguments\n\nv: A scalar representing a variational parameter.\nw: A scalar representing a variational parameter.\nα: A scalar representing the electron-phonon coupling.\nω: A scalar representing the adiabaticity.\nβ: A scalar representing the inverse temperature.\ndims: An optional argument representing the number of dimensions. Default is 3.\n\nReturns\n\nintegral: The electron-phonon interaction energy for the Holstein mode at finite temperature.\n\nExample\n\nv = 0.2\nw = 0.1\nα = 0.5\nω = 0.3\nβ = 1.0\nresult = holstein_interaction_energy(v, w, α, ω, β)\nprintln(result)\n\nThis example calculates the electron-phonon interaction energy for given values of v, w, α, ω, and β. The result is then printed.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.holstein_interaction_energy_integrand-NTuple{5, Any}","page":"Functions","title":"PolaronMobility.holstein_interaction_energy_integrand","text":"holstein_interaction_energy_integrand(τ, v, w, α, ω; dims = 3)\n\nCalculate the integrand for the Holstein interaction energy.\n\nArguments\n\nτ: A scalar representing the imaginary time.\nv: A scalar representing a variational parameter.\nw: A scalar representing a variational parameter.\nα: A scalar representing the electron-phonon coupling.\nω: A scalar representing the adiabaticity.\ndims: An optional parameter representing the number of dimensions (default is 3).\n\nReturns\n\nThe integrand for the Holstein interaction energy.\n\nExample\n\nτ = 0.5\nv = 0.2\nw = 0.1\nα = 0.3\nω = 0.4\nresult = holstein_interaction_energy_integrand(τ, v, w, α, ω)\nprintln(result)\n\nThis example calculates the integrand for the Holstein interaction energy using the given values of τ, v, w, α, and ω. The result is then printed.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.holstein_interaction_energy_integrand-NTuple{6, Any}","page":"Functions","title":"PolaronMobility.holstein_interaction_energy_integrand","text":"holstein_interaction_energy_integrand(τ, v, w, α, ω, β; dims = 3)\n\nCalculate the integrand for the Holstein interaction energy.\n\nArguments\n\nτ: A scalar representing the imaginary time.\nv: A scalar representing a variational parameter.\nw: A scalar representing a variational parameter.\nα: A scalar representing the electron-phonon coupling.\nω: A scalar representing the adiabaticity.\nβ: A scalar representing the inverse temperature.\ndims: An optional parameter representing the number of dimensions (default is 3).\n\nReturns\n\nThe integrand for the Holstein interaction energy.\n\nExample\n\nτ = 0.5\nv = 0.2\nw = 0.1\nα = 0.3\nω = 0.4\nβ = 1.0\nresult = holstein_interaction_energy_integrand(τ, v, w, α, ω, β)\nprintln(result)\n\nThis example calculates the integrand for the Holstein interaction energy using the given values of τ, v, w, α, and ω. The result is then printed.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.holstein_interaction_energy_integrand_k_space-NTuple{5, Any}","page":"Functions","title":"PolaronMobility.holstein_interaction_energy_integrand_k_space","text":"Integrand for imaginary time integral for the holstein interaction energy at zero temperature.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.holstein_interaction_energy_integrand_k_space-NTuple{6, Any}","page":"Functions","title":"PolaronMobility.holstein_interaction_energy_integrand_k_space","text":"Integrand for imaginary time integral for the holstein interaction energy at finite temperature.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.holstein_interaction_energy_k_space-NTuple{4, Any}","page":"Functions","title":"PolaronMobility.holstein_interaction_energy_k_space","text":"Electron-phonon interaction energy for the Holstein mode at zero temperature.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.holstein_interaction_energy_k_space-NTuple{5, Any}","page":"Functions","title":"PolaronMobility.holstein_interaction_energy_k_space","text":"Electron-phonon interaction energy for the Holstein mode at finite temperature.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.holstein_memory_function-NTuple{5, Any}","page":"Functions","title":"PolaronMobility.holstein_memory_function","text":"holstein_memory_function(Ω, v, w, α, ω; dims = 3)\n\nCalculate the integral of a structure factor using the general_memory_function function.\n\nArguments\n\nΩ: The frequency parameter.\nv, w, α, ω: Parameters used in the holstein_structure_factor function.\ndims: Optional parameter specifying the number of dimensions, defaults to 3.\n\nReturns\n\nThe integral value of the structure factor.\n\nExample\n\nresult = holstein_memory_function(Ω, v, w, α, ω; dims = 3)\n\nIn this example, the holstein_memory_function is called with the parameters Ω, v, w, α, and ω. The dims parameter is optional and defaults to 3. The function calculates the structure factor using the holstein_structure_factor function and then calls the general_memory_function to calculate the integral of the structure factor. The result is stored in the result variable.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.holstein_memory_function-NTuple{6, Any}","page":"Functions","title":"PolaronMobility.holstein_memory_function","text":"holstein_memory_function(Ω, v, w, α, ω, β; dims = 3)\n\nCalculate the memory function using the general_memory_function function.\n\nArguments\n\nΩ: a parameter representing a frequency\nv, w, α, ω, β: parameters used to calculate the structure factor\ndims: an optional parameter representing the dimensions (default value is 3)\n\nReturns\n\nThe result of the general_memory_function function, which represents the calculated memory function.\n\nExample\n\nresult = holstein_memory_function(Ω, v, w, α, ω, β; dims = 3)\n\nIn this example, the holstein_memory_function is called with the input parameters Ω, v, w, α, ω, and β, and the optional parameter dims set to 3. The function calculates the memory function using the general_memory_function function and returns the result.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.holstein_memory_function_k_space-NTuple{5, Any}","page":"Functions","title":"PolaronMobility.holstein_memory_function_k_space","text":"Memory function for the Holstein model at zero temperature.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.holstein_memory_function_k_space-NTuple{6, Any}","page":"Functions","title":"PolaronMobility.holstein_memory_function_k_space","text":"Memory function for the Holstein model with temperature dependence.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.holstein_mobility-NTuple{5, Any}","page":"Functions","title":"PolaronMobility.holstein_mobility","text":"holstein_mobility(v, w, α, ω, β; dims = 3)\n\nCalculate the mobility using the general_memory_function and holstein_structure_factor functions.\n\nArguments\n\nv: Parameter used in the holstein_structure_factor function.\nw: Parameter used in the holstein_structure_factor function.\nα: Parameter used in the holstein_structure_factor function.\nω: Parameter used in the holstein_structure_factor function.\nβ: Parameter used in the holstein_structure_factor function.\ndims: The dimensionality of the system. Default is 3.\n\nReturns\n\nThe calculated mobility.\n\nExample\n\nv = 1.0\nw = 2.0\nα = 0.5\nω = 1.0\nβ = 0.2\ndims = 3\n\nresult = holstein_mobility(v, w, α, ω, β, dims=dims)\nprintln(result)\n\nThis code calculates the mobility using the given parameters and prints the result.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.holstein_mobility_k_space-NTuple{5, Any}","page":"Functions","title":"PolaronMobility.holstein_mobility_k_space","text":"DC Mobility for the Holstein model.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.holstein_structure_factor-NTuple{5, Any}","page":"Functions","title":"PolaronMobility.holstein_structure_factor","text":"holstein_structure_factor(t, v, w, α, ω; dims = 3)\n\nCalculate the structure factor for the Holstein model.\n\nArguments\n\nt: A scalar representing the time.\nv: A scalar representing a parameter.\nw: A scalar representing a parameter.\nα: A scalar representing a parameter.\nω: A scalar representing a parameter.\ndims: An optional integer representing the number of dimensions (default is 3).\n\nReturns\n\nThe value of the structure factor.\n\nExample\n\nt = 0.5\nv = 0.2\nw = 0.1\nα = 1.0\nω = 0.5\nresult = holstein_structure_factor(t, v, w, α, ω)\nprintln(result)\n\nThis example calculates the structure factor for the given values of t, v, w, α, and ω. The result is then printed.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.holstein_structure_factor-NTuple{6, Any}","page":"Functions","title":"PolaronMobility.holstein_structure_factor","text":"holstein_structure_factor(t, v, w, α, ω, β; dims = 3)\n\nCalculate the structure factor for the Holstein model.\n\nArguments\n\nt: A scalar representing the time.\nv: A scalar representing a parameter.\nw: A scalar representing a parameter.\nα: A scalar representing a coupling constant.\nω: A scalar representing a coupling constant.\nβ: A scalar representing the inverse temperature.\ndims: An optional argument representing the number of dimensions. Default is 3.\n\nReturns\n\nThe value of the structure factor for the given inputs.\n\nExample\n\nt = 0.5\nv = 0.2\nw = 0.1\nα = 0.3\nω = 0.4\nβ = 1.0\nresult = holstein_structure_factor(t, v, w, α, ω, β)\nprintln(result)\n\nThis example demonstrates how to use the holstein_structure_factor function to calculate the structure factor for a given set of parameters. The function is called with the values of t, v, w, α, ω, and β as arguments, and the result is then printed.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.holstein_structure_factor_k_space-NTuple{5, Any}","page":"Functions","title":"PolaronMobility.holstein_structure_factor_k_space","text":"The Dynamical Structure Factor for the Holstein model at zero temperature.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.holstein_structure_factor_k_space-NTuple{6, Any}","page":"Functions","title":"PolaronMobility.holstein_structure_factor_k_space","text":"The Dynamical Structure Factor for the Holstein model with temperature dependence.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.inverse_FHIP_mobility_lowT-NTuple{5, Any}","page":"Functions","title":"PolaronMobility.inverse_FHIP_mobility_lowT","text":"inverse_FHIP_mobility_lowT(v, w, α, ω, β)\n\nFHIP low-temperature mobility, final result of Feynman1962. [1.60] in Devreese2016 page 36; 6th Edition of Frohlich polaron notes (ArXiv).\n\nSee also FHIP_mobility_lowT\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.inverse_FHIP_mobility_lowT-Tuple{Any, Any, Vector, Vector, Any}","page":"Functions","title":"PolaronMobility.inverse_FHIP_mobility_lowT","text":"inverse_FHIP_mobility_lowT(v, w, α::Vector, ω::Vector, β::Vector)\n\nInverse FHIP mobility for multiple phonon modes.\n\nSee also FHIP_mobility_lowT\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.inverse_Hellwarth_mobility-NTuple{5, Any}","page":"Functions","title":"PolaronMobility.inverse_Hellwarth_mobility","text":"inverse_Hellwarth_mobility(v, w, α, ω, β)\n\nCalculates the DC mobility using Hellwarth et al. 1999 Eqn. (2). Directly performs contour integration in Feynman1962, for finite temperature DC mobility. Eqns. (2) and (1) are going back to the general (pre low-T limit) formulas in Feynman1962.   To evaluate these, you need to do the explicit contour integration to get the polaron self-energy.\n\nSee Hellwarth et a. 1999: https://doi.org/10.1103/PhysRevB.60.299.\n\nSee also Hellwarth_mobility\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.inverse_Hellwarth_mobility-Tuple{Any, Any, Vector, Vector, Any}","page":"Functions","title":"PolaronMobility.inverse_Hellwarth_mobility","text":"inverse_Hellwarth_mobility(v, w, α::Vector, ω::Vector, β::Vector)\n\nInverse Hellwarth mobility for multiple phonon modes.\n\nSee also Hellwarth_mobility\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.inverse_Kadanoff_mobility_lowT-NTuple{5, Any}","page":"Functions","title":"PolaronMobility.inverse_Kadanoff_mobility_lowT","text":"inverse_Kadanoff_mobility_lowT(v, w, α, ω, β)\n\nKadanoff low-temperaure mobility, constructed around Boltzmann equation. Adds factor of 3 / (2 * β) c.f. FHIP, correcting phonon emission behaviour.\n\nSee also Kadanoff_mobility_lowT\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.inverse_Kadanoff_mobility_lowT-Tuple{Any, Any, Vector, Vector, Any}","page":"Functions","title":"PolaronMobility.inverse_Kadanoff_mobility_lowT","text":"inverse_Kadanoff_mobility_lowT(v, w, α::Vector, ω::Vector, β::Vector)\n\nInverse Kadanoff mobility for multiple phonon modes.\n\nSee also Kadanoff_mobility_lowT\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.inverse_polaron_mobility-NTuple{5, Any}","page":"Functions","title":"PolaronMobility.inverse_polaron_mobility","text":"inverse_polaron_mobility(v, w, α, ω, β)\n\nCalculate the inverse of the dc mobility μ of the polaron at finite temperatues (Eqn. (11.5) in F. Peeters and J. Devreese 1984) for a given frequency Ω.\n\nArguments\n\nv::Float64: is the 'v' variational parameter.\nw::Float64: is the 'w' variational parameter. \nα::Float64: is the Frohlich alpha coupling parameter.\nω::Float64: is the angular phonon frequency.\nβ::Float64: is the reduced thermodynamic beta. \nverbose: is used by make_polaron() to specify whether or not to print. Ignore.\n\nSee F. Peeters and J. Devreese 1984: https://doi.org/10.1016/S0081-1947(08)60312-4.\n\nSee also polaron_mobility, polaron_complex_conductivity\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.inverse_polaron_mobility-Tuple{Any, Any, Vector, Vector, Any}","page":"Functions","title":"PolaronMobility.inverse_polaron_mobility","text":"inverse_polaron_mobility(v, w, α::Vector, ω::Vector, β::Vector)\n\ninverse of the polaron mobility, but for multiple phonon modes.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.load_polaron-Tuple{Any}","page":"Functions","title":"PolaronMobility.load_polaron","text":"load_polaron(p::NewPolaron, prefix)\n\nLoads data from file \"polaronfilepath\" into a NewPolaron type.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.optical_absorption-NTuple{5, Any}","page":"Functions","title":"PolaronMobility.optical_absorption","text":"optical_absorption(Ω, β, α, v, w; rtol = 1e-3)\n\nCalculate the absorption coefficient Γ(Ω) for the polaron at at finite temperatures (Eqn. (11a) in DSG 1972) for a given frequency Ω.  \n\nArguments\n\nΩ::Float64: is the frequency (2π THz) of applied electric field.\nβ::Float64: is the reduced thermodynamic betas. \nα::Float64: is the Frohlich alpha coupling parameter.\nv::Float64: is the 'v' variational parameter.\nw::Float64: is the 'w' variational parameter. \nrtol: relative tolerance for the accuracy of any quadrature integrations.\n\nSee DSG 1972: https://doi.org/10.1103/PhysRevB.5.2367.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.phonon_propagator-Tuple{Any, Any, Any}","page":"Functions","title":"PolaronMobility.phonon_propagator","text":"phonon_propagator(τ, ω, β)\n\nCalculate the value of the phonon propagator at a given imaginary time (τ), phonon frequency (ω), and inverse temperature (β).\n\nArguments\n\nτ: A scalar representing the imaginary time.\nω: A scalar representing the phonon frequency.\nβ: A scalar representing the inverse temperature.\n\nReturns\n\nThe value of the phonon propagator.\n\nExample\n\nτ = 0.5\nω = 0.2\nβ = 1.0\nresult = phonon_propagator(τ, ω, β)\nprintln(result)\n\nThis example calculates the value of the phonon propagator for τ = 0.5, ω = 0.2, and β = 1.0. The result is then printed.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.phonon_propagator-Tuple{Any, Any}","page":"Functions","title":"PolaronMobility.phonon_propagator","text":"phonon_propagator(τ, ω)\n\nCalculate the value of the phonon propagator based on the given inputs.\n\nArguments\n\nτ: A scalar representing the imaginary time.\nω: A scalar representing the adiabaticity.\n\nExample\n\nτ = 0.5\nω = 0.2\nresult = phonon_propagator(τ, ω)\nprintln(result)\n\nThis example calculates the value of the phonon propagator for the given values of τ and ω. The result is then printed.\n\nReturns\n\nThe value of the phonon propagator.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.polaron-Tuple{Any, Any, Any}","page":"Functions","title":"PolaronMobility.polaron","text":"polaron(αrange, Trange, Ωrange, ω, v_guesses, w_guesses; verbose=false)\n\nOuter constructor for the Polaron type. This function evaluates model data for the polaron, i.e. unitless and not material specific. \n\nExamples\n\njulia> polaron(6, 300, 3, 1.0, 3.6, 2.8)\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.polaron-Tuple{Any, Any}","page":"Functions","title":"PolaronMobility.polaron","text":"No frequency input.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.polaron-Tuple{Any}","page":"Functions","title":"PolaronMobility.polaron","text":"No temperature input => 300 K.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.polaron-Tuple{Material, Vararg{Any}}","page":"Functions","title":"PolaronMobility.polaron","text":"polaron(material::Material, TΩrange...; v_guesses=3.11, w_guesses=2.87, verbose=false)\n\nMaterial specific constructors that use material specific parameters to parameterise the polaron. Material data is inputted through the Material type. Returns all data in either SI units or other common, suitable units otherwise.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.polaron-Tuple{Real, Any, Any}","page":"Functions","title":"PolaronMobility.polaron","text":"Single alpha parameter. polaron() expects alpha parameters to be in a Vector.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.polaron-Tuple{}","page":"Functions","title":"PolaronMobility.polaron","text":"No input => α = 1\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.polaron_complex_conductivity-NTuple{6, Any}","page":"Functions","title":"PolaronMobility.polaron_complex_conductivity","text":"polaron_complex_conductivity(Ω, β, α, v, w; rtol = 1e-3)\n\nCalculate the complex conductivity σ(Ω) of the polaron at finite temperatures for a given frequency Ω (equal to 1 / Z(Ω) with Z the complex impedence). \n\nArguments\n\nΩ::Float64: is the frequency (2π THz) of applied electric field.\nβ::Float64: is the reduced thermodynamic betas. \nα::Float64: is the Frohlich alpha coupling parameter.\nv::Float64: is the 'v' variational parameter.\nw::Float64: is the 'w' variational parameter. \nrtol: relative tolerance for the accuracy of any quadrature integrations.\n\nSee also polaron_complex_impedence\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.polaron_complex_impedence-NTuple{6, Any}","page":"Functions","title":"PolaronMobility.polaron_complex_impedence","text":"polaron_complex_impedence(Ω, β, α, v, w; rtol = 1e-3, T = nothing, verbose = false)\n\nCalculate the complex impedence Z(Ω) of the polaron at finite temperatures for a given frequency Ω (Eqn. (41) in FHIP 1962). \n\nArguments\n\nΩ::Float64: is the frequency (2π THz) of applied electric field.\nβ::Float64: is the reduced thermodynamic betas. \nα::Float64: is the Frohlich alpha coupling parameter.\nv::Float64: is the 'v' variational parameter.\nw::Float64: is the 'w' variational parameter. \nrtol: relative tolerance for the accuracy of any quadrature integrations.\nT: is a token used by make_polaron() to keep track of the temperature for printing during a calculation. Do not alter.\nverbose: is used by make_polaron() to specify whether or not to print. Ignore.\n\nSee FHIP 1962: https://doi.org/10.1103/PhysRev.127.1004.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.polaron_memory_function-NTuple{6, Any}","page":"Functions","title":"PolaronMobility.polaron_memory_function","text":"polaron_memory_function(Ω, β, α, v, w; ω = 1.0, rtol = 1e-3)\n\nCalculate the memory function χ(Ω) of the polaron at finite temperatures (equation (35) in FHIP 1962) for a given frequency Ω. \n\nIncludes conditionals for zero-temperature and DC limits.  \n\nArguments\n\nΩ::Float64: electric field frequency (2π THz).\nβ::Union{Float64, Vector{Float64} reduced thermodynamic temperatures (unitless). Either a single value for one phonon frequency or a vector of values for multiple phonon frequencies.\nα::Union{Float64, Vector{Float64}}: Frohlich alpha coupling parameter (unitless). Either a single value for one phonon frequency or a vector of values for multiple phonon frequencies.\nv::Union{Float64, Vector{Float64}}: variational 'v' parameters that minimise the polaron free energy (unitless).\nw::Union{Float64, Vector{Float64}}: variational 'w' parameters that minimise the polaron free energy (unitless).\nω::Union{Float64, Vector{Float64}}: phonon mode frequencies (2π THz). Predefined as ω = 1.0 for a single mode in polaron units.\nrtol = 1e-3: specifies the relative error tolerance for the QuadGK integral.\n\nReturns\n\nχ: The calculated memory function χ(Ω) of the polaron.\n\nExample\n\nχ = polaron_memory_function(v, w, α, ω, β, Ω)\n\nDescription\n\nThe code snippet is a function called polaron_memory_function that calculates the memory function χ(Ω) of a polaron at finite temperatures. It includes conditionals for different cases: zero-temperature and DC limits, zero temperature limit at AC finite frequencies, and finite temperatures and frequencies away from zero limits.\n\nIf Ω is zero and β is infinity, the code returns a complex number with zero real part and infinity imaginary part. If Ω is zero and β is not infinity, the code calls the polaron_memory_function_dc function to calculate the memory function at the DC zero frequency limit. If Ω is not zero and β is infinity, the code calls the polaron_memory_function_athermal function to calculate the memory function at the zero temperature limit with AC finite frequencies. If Ω is not zero and β is not infinity, the code calls the polaron_memory_function_thermal function to calculate the memory function at finite temperatures and frequencies away from zero limits. If none of the above conditions are met, an error message is printed.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.polaron_memory_function-Tuple{Any, Any, Vector, Vector, Any, Any}","page":"Functions","title":"PolaronMobility.polaron_memory_function","text":"polaron_memory_function(v, w, α::Vector, ω::Vector, β, Ω)\n\nApply the polaron_memory_function to each element of the input vectors and return the sum of the results.\n\nArguments\n\nv::Vector: A vector of values.\nw::Vector: A vector of values.\nα::Vector: A vector of values.\nω::Vector: A vector of values.\nβ: A value.\nΩ: A value.\n\nReturns\n\nThe sum of the polaron_memory_function applied to each element of the input vectors.\n\nExample\n\nv = [1, 2, 3]\nw = [4, 5, 6]\nα = [0.1, 0.2, 0.3]\nω = [0.5, 0.6, 0.7]\nβ = 1.0\nΩ = 2.0\n\nresult = polaron_memory_function(v, w, α, ω, β, Ω)\n\nprintln(result)  # Output: the sum of the function applied to each element of the input vectors\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.polaron_memory_function_athermal-NTuple{5, Any}","page":"Functions","title":"PolaronMobility.polaron_memory_function_athermal","text":"function polaron_memory_function_athermal(Ω, α, v, w; ω = 1.0, rtol = 1e-3)\n\nCalculate polaron complex memory function at zero-temperature inclusive of multiple phonon branches j, each with angular frequency ωj. \n\nArguments\n\nΩ::Float64: is the frequency (THz) of applied electric field.\nα::Vector{Float64}: is an array of decomposed Frohlich alphas, one for each phonon frequency ω[j]. \nv::Union{Float64, Vector{Float64}}: is a vector or single value of the 'v' variational parameter(s).\nw::Union{Float64, Vector{Float64}}: is a vector or single value of the 'w' variational parameter(s).\nm_eff::Float64: is the bare-band mass of the particle (typically electron / hole, in units of electron mass m_e).\nω::Union{Float64, Vector{Float64}}: phonon mode frequencies (2π THz). Predefined as ω = 1.0 for a single mode in polaron units.\nrtol = 1e-3: specifies the relative error tolerance for the QuadGK integral.\n\nSee also polaron_memory_function.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.polaron_memory_function_dc-NTuple{5, Any}","page":"Functions","title":"PolaronMobility.polaron_memory_function_dc","text":"function polaron_memory_function_dc(β, α, v, w; ω = 1.0, rtol = 1e-3)\n\nCalculate zero-frequency polaron complex memory function at finite temperature inclusive of multiple phonon branches j, each with angular frequency ωj. \n\nArguments\n\nβ::Vector{Float64}: is an array of reduced thermodynamic betas, one for each phonon frequency ω[j]. \nα::Vector{Float64}: is an array of decomposed Frohlich alphas, one for each phonon frequency ω[j]. \nv::Union{Float64, Vector{Float64}}: is a vector or single value of the 'v' variational parameter(s).\nw::Union{Float64, Vector{Float64}}: is a vector or single value of the 'w' variational parameter(s).\nm_eff::Float64: is the bare-band mass of the particle (typically electron / hole, in units of electron mass m_e).\nω::Union{Float64, Vector{Float64}}: phonon mode frequencies (2π THz). Predefined as ω = 1.0 for a single mode in polaron units.\nrtol = 1e-3: specifies the relative error tolerance for the QuadGK integral.\n\nSee also polaron_memory_function.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.polaron_memory_function_thermal-NTuple{6, Any}","page":"Functions","title":"PolaronMobility.polaron_memory_function_thermal","text":"function polaron_memory_function_thermal(Ω, β, α, v, w; ω = 1.0, rtol = 1e-3)\n\nCalculate polaron complex memory function at finite temperature inclusive of multiple phonon branches j, each with angular frequency ωj. \n\nArguments\n\nΩ::Float64: is the frequency (THz) of applied electric field.\nβ::Vector{Float64}: is an array of reduced thermodynamic betas, one for each phonon frequency ω[j]. \nα::Vector{Float64}: is an array of decomposed Frohlich alphas, one for each phonon frequency ω[j]. \nv::Union{Float64, Vector{Float64}}: is a vector or single value of the 'v' variational parameter(s).\nw::Union{Float64, Vector{Float64}}: is a vector or single value of the 'w' variational parameter(s).\nm_eff::Float64: is the bare-band mass of the particle (typically electron / hole, in units of electron mass m_e).\nω::Union{Float64, Vector{Float64}}: phonon mode frequencies (2π THz). Predefined as ω = 1.0 for a single mode in polaron units.\nrtol = 1e-3: specifies the relative error tolerance for the QuadGK integral.\n\nSee also polaron_memory_function.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.polaron_mobility-NTuple{5, Any}","page":"Functions","title":"PolaronMobility.polaron_mobility","text":"polaron_mobility(v, w, α, ω, β)\n\nThe polaron mobility.\n\nSee also inverse_polaron_mobility\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.polaron_propagator-NTuple{4, Any}","page":"Functions","title":"PolaronMobility.polaron_propagator","text":"polaron_propagator(τ, v, w, β)\n\nCalculate the imaginary time polaron Green's function with temperature dependence.\n\nArguments\n\nτ: A scalar representing the imaginary time.\nv: A scalar representing a variational parameter.\nw: A scalar representing a variational parameter.\nβ: A scalar representing the inverse temperature.\n\nReturns\n\nThe value of the polaron propagator.\n\nExample\n\nτ = 0.5\nv = 0.2\nw = 0.1\nβ = 1.0\nresult = polaron_propagator(τ, v, w, β)\nprintln(result)\n\nThis example calculates the polaron propagator for given values of τ, v, w, and β. The result is then printed.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.polaron_propagator-Tuple{Any, Any, Any}","page":"Functions","title":"PolaronMobility.polaron_propagator","text":"polaron_propagator(τ, v, w)\n\nCalculate the value of the polaron propagator based on the given inputs.\n\nArguments\n\nτ::Number: A scalar representing the imaginary time.\nv::Number: A scalar representing a variational parameter.\nw::Number: A scalar representing a variational parameter.\n\nReturns\n\nThe value of the polaron propagator.\n\nExample\n\nτ = 0.5\nv = 0.2\nw = 0.1\nresult = polaron_propagator(τ, v, w)\nprintln(result)\n\nThis example calculates the polaron propagator for the given values of τ, v, and w. The result is then printed.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.puconvert-Tuple{Any}","page":"Functions","title":"PolaronMobility.puconvert","text":"puconvert(x::Unitful.Quantity)\n\nConvert a quantity to the appropriate polaron unit.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.puconvert-Tuple{Unitful.Units, Number}","page":"Functions","title":"PolaronMobility.puconvert","text":"puconvert(u::Unitful.Units, x::Number)\n\nInterpret x as a quantity given in polaron units and convert it to the unit u.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.punit-Tuple{Any}","page":"Functions","title":"PolaronMobility.punit","text":"punit(x::Unitful.Quantity)\npunit(x::Unitful.Units)\npunit(x::Unitful.Dimensions)\n\nReturns the appropriate polaron unit (a Unitful.Units object) for the dimension of x.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.pustrip-Tuple{Any}","page":"Functions","title":"PolaronMobility.pustrip","text":"pustrip(x::Unitful.Quantity)\n\nReturns the value of the quantity converted to polaron units as a number type (i.e., with the units removed). This is equivalent to Unitful.ustrip(puconvert(x)).\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.save_polaron-Tuple{Polaron, Any}","page":"Functions","title":"PolaronMobility.save_polaron","text":"save_polaron(p::Polaron, prefix)\n\nSaves data from 'polaron' into file \"prefix\". This is a .jdl file for storing the polaron data whilst preserving types. Allows for saving multidimensional arrays that sometimes arise in the polaron data. Each parameter in the NewPolaron type is saved as a dictionary entry. E.g. NewPolaron.α is saved under JLD.load(\"prefix.jld\")[\"alpha\"].\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.spherical_k_integral-Tuple{Any, Any}","page":"Functions","title":"PolaronMobility.spherical_k_integral","text":"Integral over all k-space in spherical coordinates.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.spherical_k_integrand-Tuple{Any, Any, Any}","page":"Functions","title":"PolaronMobility.spherical_k_integrand","text":"Integrand for a k-space integral in spherical coordinates.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.vw_variation-Tuple{Any, Any, Any}","page":"Functions","title":"PolaronMobility.vw_variation","text":"vw_variation(energy, initial_v, initial_w; lower_bounds = [0, 0], upper_bounds = [Inf, Inf])\n\nThis function optimizes the values of v and w to minimize the energy function energy(x[1] + x[2], x[2])[1]. It uses the Optim package to perform the optimization and returns the optimized values of v and w, as well as the minimized energy, kinetic energy, and potential energy.\n\nArguments\n\nenergy: A function that takes two arguments x and y and returns an array of energy components.\ninitial_v: The initial value of v.\ninitial_w: The initial value of w.\nlower_bounds: An optional array representing the lower bounds for v and w optimization. Default is [0, 0].\nupper_bounds: An optional array representing the upper bounds for v and w optimization. Default is [Inf, Inf].\n\nReturns\n\nΔv + w: The optimized value of v.\nw: The optimized value of w.\nenergy_minimized: The minimized energy.\nkinetic_energy: The kinetic energy corresponding to the minimized energy.\npotential_energy: The potential energy corresponding to the minimized energy.\n\nExample\n\nenergy(x, y) = [x^2 + y^2, x^2, y^2]\ninitial_v = 0.5\ninitial_w = 0.2\nlower_bounds = [0, 0]\nupper_bounds = [Inf, Inf]\nresult = vw_variation(energy, initial_v, initial_w; lower_bounds, upper_bounds)\nprintln(result)\n\nThis example demonstrates how to use the vw_variation function. It defines an energy function energy(x, y) that returns an array of energy components. It then calls vw_variation with the initial values of v and w, as well as lower and upper bounds for the optimization. The function optimizes v and w to minimize the energy and returns the optimized values, as well as the minimized energy, kinetic energy, and potential energy. The result is then printed.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.κ_i-Tuple{Any, Vector, Vector}","page":"Functions","title":"PolaronMobility.κ_i","text":"κ_i(i, v, w)\n\nCalculates the spring-constant coupling the electron to the 'ith' fictitious mass that approximates the exact electron-phonon interaction with a harmonic coupling to a massive fictitious particle. \n\nRequired for calculating the polaron free energy.\n\nNote: Not to be confused with the number of physical phonon branches; many phonon branches could be approximated with one or two etc. fictitious masses for example. The number of fictitious mass does not necessarily need to match the number of phonon branches.\n\nArguments\n\ni::Integer: enumerates the current fictitious mass.\nv::Vector{Float64}: is a vector of the v variational parameters.\nw::Vector{Float64}: is a vector of the w variational parameters.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.ϵ_ionic_mode-Tuple{Any, Any, Any}","page":"Functions","title":"PolaronMobility.ϵ_ionic_mode","text":"ϵ_ionic_mode(phonon_mode_freq, ir_activity, volume)\n\nCalculate the ionic contribution to the dielectric function for a given phonon mode.\n\nArguments\n\nphonon_mode_freq::Float64: is the frequency of the mode in THz.\nir_activity::Float64: is the infra-red activity of the mode in e²amu⁻¹.\nvolume::Float64: is the volume of the unit cell of the material in m³.\n\n\n\n\n\n","category":"method"},{"location":"functions/#PolaronMobility.ϵ_total-Tuple{Any, Any}","page":"Functions","title":"PolaronMobility.ϵ_total","text":"ϵ_total(freqs_and_ir_activity, volume)\n\nCalculate the total ionic contribution to the dielectric function from all phonon modes.\n\nArguments\n\nfreqs_and_ir_activity::Matrix{Float64}: is a matrix containeing the phonon mode frequencies (in THz) in the first column and the infra-red activities (in e²amu⁻¹) in the second column.\nvolume::Float64: is the volume of the unit cell of the material in m^3.\n\n\n\n\n\n","category":"method"},{"location":"examples/#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"Perhaps the easiest way to understand the code is to see how it can be used for science.  As an example system, we are going to look at some of the basic polaron properties of methylammonium lead-iodide perovskite.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"The 'Feynman' units used internally set the LO phonon reduced frequency omega=1, hbar=1 and mass-of-electron=1. ","category":"page"},{"location":"examples/#Loading-the-Module","page":"Examples","title":"Loading the Module","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"using PolaronMobility ","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"If you are running the module from outside the Julia package directory (i.e. you have cloned the repository elsewhere to more easily work on the codes), you can supplement the LOAD_PATH.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"push!(LOAD_PATH,\"../src/\") # load module from local directory","category":"page"},{"location":"examples/#α/alpha-parameter","page":"Examples","title":"α/alpha parameter","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"The Frohlich electron-phonon coupling parameter can be characterised by a dimensionless coupling, alpha (α).  This gives the long-range ('non analytic') contribution from electrodynamic coupling into infrared active phonon modes.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"alpha = \nfrac12 \nfrac14piepsilon_0 \nleft( frac1epsilon_optical - frac1epsilon_static right ) \nfrace^2hbar omega \nsqrtfrac2m_eomegahbar","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"This is provided as a convenience function (with correct units!).  Let us demonstrate by calculating α for CdTe, and compare it to literature values.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"The call signature is: ϵ-optical, ϵ-static, phonon-frequency (THz), effective-mass (in mass-of-electron units).","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"α=frohlichalpha(7.1, 10.4, 5.08, 0.095)\nprintln(\"CdTe  α=\",α,\" Stone 0.39 / Devreese 0.29\")\n#@test α ≈ 0.3 atol=0.1","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"We get a value of 0.351. ","category":"page"},{"location":"examples/#Feynman-athermal-polaron","page":"Examples","title":"Feynman athermal polaron","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"Tabulated by Schultz (Phys.Rev. 116, 1959. https://doi.org/10.1103/PhysRev.116.526)  are some numeric solutions to the athermal Feynman model. These values are often reproduced in the textbooks (e.g. Feynman & Hibbs, Emended Edition, p. 319).  For instance, Schultz gets for α=5, v=4.02, w=2.13 and E=-5.4401. ","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"julia> v,w=feynmanvw(5.0)\n(4.0343437574170915, 2.1400182510339403)\njulia> F(v,w,5.0)\n-5.440144454909065","category":"page"},{"location":"examples/#Single-temperature-phonon-properties","page":"Examples","title":"Single temperature phonon properties","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"Let us calculate the room-temperature (300 K) character of the electron-polaron in methylammonium lead iodide perovskite (MAPI).  The parameters we use are as in Frost2017PRB.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"The call signature to polaronmobility is:  Temperature range, ϵ-optical, ϵ-static, phonon-frequency (Hz), effective-mass (in mass-of-electron units). ","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"For electrons in MAPI, these are ϵ=4.5/24.1, f=2.25 THz, me=0.12 electron masses. ","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"MAPIe=polaronmobility(300, 4.5, 24.1, 2.25, 0.12)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"This will think for a bit (as Julia just-in-time compiles the required functions), and then spits out a considerable amount of information to STDOUT. ","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Polaron mobility for system ε_Inf=4.5, ε_S=24.1, freq=2.25e12, \n                 effectivemass=0.12; with Trange 300 ...\nPolaron mobility input parameters: ε_Inf=4.500000 ε_S=24.100000 freq=2.25e+12 α=2.393991 \nDerived params in SI: ω =1.41372e+13 mb=1.09313e-31 \nT: 300.000000 β: 2.41e+20 βred: 0.36 ħω  = 9.31 meV\t\tConverged? : true\n Polaraon Parameters:  v= 19.8635  w= 16.9621  ||   M=0.371360  k=106.845717\t\n Polaron frequency (SI) v= 4.5e+13 Hz  w= 3.8e+13 Hz\n Polaron size (rf), following Schultz1959. (s.d. of Gaussian polaron ψ )\n\t Schultz1959(2.4): rf= 0.528075 (int units) = 2.68001e-09 m [SI]\n Polaron Free Energy: A= -6.448918 B= 7.355627 C= 2.912080 F= -3.818788\t = -35.534786 meV\n Polaron Mobility theories:\n\tμ(FHIP)= 0.082053 m^2/Vs \t= 820.53 cm^2/Vs\n\tμ(Kadanoff,via Devreese2016)= 0.019690 m^2/Vs \t= 196.90 cm^2/Vs\n\t\tEqm. Phonon. pop. Nbar: 2.308150 \n\t\tGamma0 = 5.42813e+13 rad/s = 8.63914e+12 /s  \n\t\tTau=1/Gamma0 = 1.15752e-13 = 0.115752 ps\n\t\tEnergy Loss = 1.28798e-08 J/s = 80.3893 meV/ps\n\tμ(Hellwarth1999)= 0.013642 m^2/Vs \t= 136.42 cm^2/Vs","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"The output is a little ad-hoc, and specific values are perhaps best understood with comparison to the code, and to the references to the original papers!","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Initially the polaron state is solved for variationally.   This involves varying v and w to minimise the miss-match between the trial (analytically solvable) polaron Hamiltonian action, and the true temperature-dependent free-energy (as specified by Osaka).  The method uses automatic differentiation to get gradients for the optimisation procedure. ","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"'Textbook' expressions that predict polaron character and mobilities make assumptions about v and w (usually that either v is small, or v=w), and rather than use the finite-temperature free-energies of Osaka, use a more simple athermal polaron energy function.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Values that can be directly derived from these v and w variational parameters are then displayed.  This includes the phonon-drag mass renormalisation (M), the effective spring-constant of this drag (k), and the S.I. oscillation rates v and w in Hz.   The Schultz polaron size (rf) is outputted in various units.  The total polaron energy (as well as its decomposition into free-energy contributions) is also output (A,B,C; and F).  Essentially we are just using Julia as a glorified scientific calculator at this point, but with the units checked. ","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"The polaron theories are constructed in reduced units. Generally this means that energy is in units of ħω, and frequencies in a unit of ω (of the input phonon frequency). For convenience, these are re-printed in SI or more standard units. ","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Beyond Polaron Mobility theories:, the code enters its final phase and uses the v and w parameters specifying the polaron as an input to theories of mobility, and so directly calculate a charge carrier mobility. ","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"The asymptotic 'FHIP' mobility (low T) is calculated, this can be most easily related to textbook expressions that directly infer a mobility from an α parameter. It lacks optical phonon emission, and so shows pathological high temperature (kT > ħω) behaviour. ","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"The Kadanoff mobility (see the original paper) improves on this by assuming a Boltzmann process (independent scattering events).  From this theory we can also get an average scattering time, which we relate to the time-scale of the polaron interacting with the phonon cloud, and so to the rate of polaron cooling. ","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Finally the Hellwarth1999 scheme is used, which goes back to the original 1962 FHIP paper, and directly carries out the contour integral for the polaron impedance function. We improve on this slightly by explicitly calculating with b, though the approximation b=0 makes very little difference for any so-far tested materials. ","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"The data are also returned as a packed up in type of struct Polaron with fields of (T, Kμ, Hμ, FHIPμ, k, M, A, B, C, F, Tau, v, w, βred, rfsi, rfsmallalpha, α, mb, ω).","category":"page"},{"location":"examples/#Hellwarth's-multi-mode-scheme","page":"Examples","title":"Hellwarth's multi-mode scheme","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"The above examples are slightly back-to-front - in that we've specified a single mode frequency, as if the material were a simple tetrahedral semiconductor with only one infrared active mode.  (The Linear Optical 'LO' phonon mode.)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"In order to use these theories with more complex (many atoms in a unit cell) materials of technological relevance, we must first reduce all of these Infrared-active phonon responses to a single effective one. ","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"For this we will use the averaging scheme described in Hellwarth1999.  Currently only the B scheme (athermal) is correctly implemented; a partial A scheme implementation is present.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Let's test it against the Hellwarth1999 literature data.  The argument to the function is a table of frequencies (cm^-1) and infrared activities (unit does not matter, as long as it is consistent). ","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"# Hellwarth et al. PRB 1999 Table II - BiSiO frequencies and activities\nHellwarthII = [\n    106.23 8.86\n    160.51 9.50\n    180.33 20.85\n    206.69 10.05\n    252.76 27.00\n    369.64 61.78\n    501.71 52.87\n    553.60 86.18\n    585.36 75.41\n    607.29 98.15\n    834.53 89.36\n]\n\nprintln(\"Attempting to reproduce Hellwarth et al.'s data.\")\nprintln(\"\\nB scheme: (athermal)\")\nHellwarthBScheme(HellwarthII)\nprintln(\"    ... should agree with values given in Hellwarth(60) W_e=196.9 cm^-1 and Hellwarth(61) Ω_e=500 cm^-1\")","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"The output agrees to within three significant figures with the literatures values;","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Hellwarth (58) summation: 0.15505835776181887\nHellwarth (59) summation (total ir activity ^2): 38777.7725\nHellwarth (59) W_e (total ir activity ): 196.92072643579192\nHellwarth (61) Omega (freq): 500.08501275972833","category":"page"},{"location":"examples/#Temperature-dependent-behaviour","page":"Examples","title":"Temperature-dependent behaviour","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"Getting temperature-dependent behaviour is a matter of sending a temperature range to the polaronmobility function.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"MAPIe=polaronmobility(10:10:1000, 4.5, 24.1, 2.25, 0.12)","category":"page"},{"location":"examples/#Plotting","page":"Examples","title":"Plotting","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"For publication, savepolaron outputs a column-delimited text file for post-production plotting (with gnuplot) or similar.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"savepolaron(\"MAPI-electron\",MAPIe)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Example gnuplot scripts can be found in Examples and HalidePerovskites.","category":"page"},{"location":"examples/#Built-in-plotting","page":"Examples","title":"Built in plotting","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"The convenience function plotpolaron generates (and saves) a number of Plots.jl figures of the temperature dependent behaviour.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"It has been separated off into its own submodule (PlotPolaron), so that the Plots.jl dependency does not slow down loading of PolaronMobility.jl.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"To use it, we therefore need to inform Julia where to find PlotPolaron. A suitable initialisation script was kindly supplied by @wkearn:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"using PolaronMobility, Plots\ngr()\ninclude(Pkg.dir(\"PolaronMobility\",\"src\",\"PlotPolaron.jl\"))\nusing PlotPolaron","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"As with savepolaron, the call signature is output-file-string and then the polaron object which you have calculated.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"plotpolaron(\"MAPI-electron\",MAPIe)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"This will attempt to make fairly sensible defaults, and plot a lot of different data of sufficient quality for talk slides.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Much for the functionality has been unrolled into the Jupyter Notebook example, which should also be interactively-runnable from (https://juliabox.com). See the repository README.md for the latest information.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Here is a figure showing typical temperature-dependent behaviour of the three-different polaron mobility approximations, for MAPI.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: MAPI mobility)","category":"page"},{"location":"examples/#Further-examples","page":"Examples","title":"Further examples","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"More complete examples are provided in  Examples and HalidePerovskites.","category":"page"},{"location":"#PolaronMobility.jl","page":"PolaronMobility.jl","title":"PolaronMobility.jl","text":"","category":"section"},{"location":"","page":"PolaronMobility.jl","title":"PolaronMobility.jl","text":"These codes calculate the temperature-dependent polaron mobility for a material.  We use the Feynman path-integral variational approach.  We have parameters for various metal-halide Perovskites; as well as other systems.  These codes implement methods described across a wide range of now quite old literature.  The methods have been tested against literature values, and the calculated units more well understood.  They enable relative 'turn key' calculation of polaron parameters (most particularly the finite temperature charge carrier mobility) for an arbitrary material system, based on parameters that are standard to calculate with modern ab-initio electronic structure methods. ","category":"page"},{"location":"","page":"PolaronMobility.jl","title":"PolaronMobility.jl","text":"This documentation is intended to be read alongside the paper which was the first application (and motivation) for these codes:  Frost2017PRB (ArXiv:1704.05404 ).","category":"page"},{"location":"","page":"PolaronMobility.jl","title":"PolaronMobility.jl","text":"The required inputs are the dielectric constants (ϵ-static and ϵ-optic) , a characteristic phonon frequency (ω), and the bare-electron band effective-mass (me).  These values can be relatively easily calculated in the ab-initio electronic structure package of your choosing, or measured directly.","category":"page"},{"location":"","page":"PolaronMobility.jl","title":"PolaronMobility.jl","text":"From these four values, the code solves a temperature-dependent polaron model. This is done by variationally optimising the temperature-dependent free-energies for the coupled electron-phonon system. These optimised parameters describe the polaron with the infinite quantum field of lattice vibrations 'integrated through', and replaced with a phonon-drag term. From this the polaron features such as effective-mass, size of the wavefunction, frequency of energy oscillation etc. can be calculated.","category":"page"},{"location":"","page":"PolaronMobility.jl","title":"PolaronMobility.jl","text":"This polaron state can then be used as an input to further models for polaron mobility.","category":"page"},{"location":"","page":"PolaronMobility.jl","title":"PolaronMobility.jl","text":"The codes are designed to produce a set of temperature-dependent mobilities and other data, for direct incorporation into a scientific publication.","category":"page"},{"location":"","page":"PolaronMobility.jl","title":"PolaronMobility.jl","text":"May your phonons drag in a manner truly sublime.","category":"page"},{"location":"#Installation","page":"PolaronMobility.jl","title":"Installation","text":"","category":"section"},{"location":"","page":"PolaronMobility.jl","title":"PolaronMobility.jl","text":"These codes require Julia >1.7 . ","category":"page"},{"location":"","page":"PolaronMobility.jl","title":"PolaronMobility.jl","text":"To install, type the following at the Julia REPL:","category":"page"},{"location":"","page":"PolaronMobility.jl","title":"PolaronMobility.jl","text":"julia> Pkg.add(\"PolaronMobility\")","category":"page"},{"location":"#Community-guidelines","page":"PolaronMobility.jl","title":"Community guidelines","text":"","category":"section"},{"location":"","page":"PolaronMobility.jl","title":"PolaronMobility.jl","text":"Contributions to the code (extending that which is calculated), or additional physical systems / examples, are very welcome. ","category":"page"},{"location":"","page":"PolaronMobility.jl","title":"PolaronMobility.jl","text":"If you have questions about the software, scientific questions, or find errors, please create a GitHub issue. ","category":"page"},{"location":"","page":"PolaronMobility.jl","title":"PolaronMobility.jl","text":"If you find this package (or snippets, such as the entered and tested free-energy expressions) useful for your work, please cite the paper  Frost2017PRB. ","category":"page"},{"location":"","page":"PolaronMobility.jl","title":"PolaronMobility.jl","text":"@article{Frost2017,\n  doi = {10.1103/physrevb.96.195202},\n  url = {https://doi.org/10.1103/physrevb.96.195202},\n  year  = {2017},\n  month = {nov},\n  publisher = {American Physical Society ({APS})},\n  volume = {96},\n  number = {19},\n  author = {Jarvist Moore Frost},\n  title = {Calculating polaron mobility in halide perovskites},\n  journal = {Physical Review B}\n}","category":"page"},{"location":"scientific_discussion/#Scientific-discussion","page":"Scientific discussion","title":"Scientific discussion","text":"","category":"section"},{"location":"scientific_discussion/#Overview","page":"Scientific discussion","title":"Overview","text":"","category":"section"},{"location":"scientific_discussion/","page":"Scientific discussion","title":"Scientific discussion","text":"These codes solve the Feynman polaron mode [Feynman1955] with Ōsaka's [Osaka1961] finite-temperature energies.  We use the form of these free energies, as presented in [Hellwarth1999].","category":"page"},{"location":"scientific_discussion/","page":"Scientific discussion","title":"Scientific discussion","text":"For each temperature, the total free energy of the Feynman coupled phonon-electron system is minimised by optimising coefficients (v and w) which, equivalently, describe the spring-coupling coefficient (k) and effective-mass (M) of the phonon cloud (i.e. the phonon drag / phonon surfing contribution).  This integrates through the infinite quantum field of the harmonic oscillators which make up the dynamic response of the lattice, to simplify the problem back to a quasi-particle (the polaron). ","category":"page"},{"location":"scientific_discussion/","page":"Scientific discussion","title":"Scientific discussion","text":"The codes calculate the polaron mobility, with both the original low-temperature FHIP asymptotic approximation [Feynman1962]; Kadanoff's [Kadanoff1964] Boltzmann equation motivated phonon-emission correction to the FHIP; and Hellwarth et al.'s [Hellwarth1999] method.  This last method (Hellwarth) is probably the most accurate.  This uses a more general result (Eqn. 44-47) in [Feynman1962], directly evaluating the contour integral for the polaron self-energy numerically. ","category":"page"},{"location":"scientific_discussion/","page":"Scientific discussion","title":"Scientific discussion","text":"Underlying all this is the simplified Fröhlich Hamiltonian [Frohlich1952] for a single electron interacting with a phonon cloud of non-interacting (harmonic) phonons. The electron-phonon interaction for a polar system is treated at the simple level of being the dielectric response.  These are the infrared-active modes present at the Gamma point in the Brillouin zone.  Along with an effective mode frequency, the dielectric constants are used to calculate the dimensionless 'α' parameter describing the electron-phonon coupling.   (In a simple covalent semiconductor system, the only dielectric active mode is the linear-optical mode.)","category":"page"},{"location":"scientific_discussion/","page":"Scientific discussion","title":"Scientific discussion","text":"The Feynman model offers a direct solution of this most simple quantum field problem.  The infinite phonon (quantum) field is 'integrated out' by path integration.  The soluble system is one in which you have an electron interacting by a (harmonic) spring constant with a mass representing the phonon drag.  The variational method allows you to find a set of parameters for this simplified system which produces the smallest free-energy. ","category":"page"},{"location":"scientific_discussion/","page":"Scientific discussion","title":"Scientific discussion","text":"This is now a (renormalised) single particle system, a quasi-particle.","category":"page"},{"location":"scientific_discussion/","page":"Scientific discussion","title":"Scientific discussion","text":"These Julia codes use Hellwarth's [Hellwarth1999] presentation of Ōsaka's variational free-energies for the Feynman model. We optimise the v and w parameters for these finite-temperature free energies. These can be alternatively restated the mass 'M' and spring-constant 'k' of the coupled phonon-electron Feynman model.","category":"page"},{"location":"scientific_discussion/","page":"Scientific discussion","title":"Scientific discussion","text":"Here we apply these methods to the case of hybrid halide perovskites. The method provides the temperature dependent polaron-mobility without any free parameters. No arbitrary relaxation time is needed or used. The scattering processes are treated directly, by including an effective electron-phonon coupling in the specification of the Fröhlich α/'alpha' parameter, and then all other features come from solving the model. The original Feynman model is correct to all orders in alpha, and the Hellwarth direct contour-integration of the general Feynman mobility statement is suitable for high temperature.","category":"page"},{"location":"scientific_discussion/","page":"Scientific discussion","title":"Scientific discussion","text":"It was necessary to return to these (rather old!) papers and resolve the models, as hybrid halide perovskites are soft materials with low energy phonons. Therefore the effective temperature in terms of a reduced thermodynamic beta (beta=hbar omega / (kBoltzmann * Temperature) ; β=ħω/(kB.T) ) is much smaller than previously considered.","category":"page"},{"location":"scientific_discussion/","page":"Scientific discussion","title":"Scientific discussion","text":"A final note that: in [Hellwarth1999], there is a mistake in the formula for 'b', which is also present in their prior PRL [Biaggio1997]. It is correct in [Feynman1962], where there is no factor of b on the right-hand side. They probably didn't notice this, as they set it to zero.  This doesn't make too much difference (~0.1%, for the hybrid halide perovskites) to the calculated mobility.   Since we're integrating numerically anyway, we may as well calculate it explicitly.","category":"page"},{"location":"scientific_discussion/#Bibliography","page":"Scientific discussion","title":"Bibliography","text":"","category":"section"},{"location":"scientific_discussion/","page":"Scientific discussion","title":"Scientific discussion","text":"This bibliography is listed in vague order of utility; I recommend reading the first ones first!","category":"page"},{"location":"scientific_discussion/","page":"Scientific discussion","title":"Scientific discussion","text":"Feynman also describes his Polaron model in more detail in both 'Statistical Mechanics' [Feynman1972] and 'Quantum Mechanics and Path Integrals' [FeynmanHibbs1965]. Note that the differing presentations of Feynman do not always agree in detail.","category":"page"},{"location":"scientific_discussion/","page":"Scientific discussion","title":"Scientific discussion","text":"Schulman's 'Techniques and applications of path integration' has a 10-page chapter on the Polaron problem. It tries to unify the Feynman prescriptions.","category":"page"},{"location":"scientific_discussion/","page":"Scientific discussion","title":"Scientific discussion","text":"J.T. Devreese's \"Fröhlich Polarons. Lecture course including detailed theoretical derivations\" (6th edition, 2016) notes on the ArXiv is a very good place to start & to get an overview of the area. https://arxiv.org/abs/1611.06122","category":"page"},{"location":"scientific_discussion/","page":"Scientific discussion","title":"Scientific discussion","text":"\n% This introduces two prescriptions for reducing a multi-mode polar lattice to\n% a single ~mean-field~ response.\n% It contains a modern version of the Ōsaka finite temperature free-energies\n% for use in a variational solution of the Feynman temperature problem.\n% It also includes how to (numerically) do the contour integration to get the\n% DC-response of the polaron developed in Feynman1962.\n@article{Hellwarth1999,\n  doi = {10.1103/physrevb.60.299},\n  url = {https://doi.org/10.1103%2Fphysrevb.60.299},\n  year  = {1999},\n  month = {jul},\n  publisher = {American Physical Society ({APS})},\n  volume = {60},\n  number = {1},\n  pages = {299--307},\n  author = {Robert W. Hellwarth and Ivan Biaggio},\n  title = {Mobility of an electron in a multimode polar lattice},\n  journal = {Physical Review B}\n}\n\n% Boltzmann / relaxation time approximation solution of mobility in the Feynman\n% polaron problem.\n% We extract a relaxation time (+ offer this method of mobility).\n@article{Kadanoff1963,\n  doi = {10.1103/physrev.130.1364},\n  url = {https://doi.org/10.1103%2Fphysrev.130.1364},\n  year  = {1963},\n  month = {may},\n  publisher = {American Physical Society ({APS})},\n  volume = {130},\n  number = {4},\n  pages = {1364--1369},\n  author = {Leo P. Kadanoff},\n  title = {Boltzmann Equation for Polarons},\n  journal = {Physical Review}\n}\n\n% A long and very useful article developing response theories for the polaron.\n% Mainly known for the FHIP mobility, which is low-temperature only.\n@article{Feynman1962,\n  doi = {10.1103/physrev.127.1004},\n  url = {https://doi.org/10.1103%2Fphysrev.127.1004},\n  year  = {1962},\n  month = {aug},\n  publisher = {American Physical Society ({APS})},\n  volume = {127},\n  number = {4},\n  pages = {1004--1017},\n  author = {R. P. Feynman and R. W. Hellwarth and C. K. Iddings and P. M. Platzman},\n  title = {Mobility of Slow Electrons in a Polar Crystal},\n  journal = {Physical Review}\n}\n\n% The original development of Feynman's solution to the polaron problem.\n% Zero temperature approximate variational solutions developed (in limits w->0,\n% or w=v).\n% Perturbative theories of phonon-drag effective-mass renormalisation given.\n% (i.e. where the 'me=1+alpha/6' & etc. limits are from. )\n@article{Feynman1955,\n  doi = {10.1103/physrev.97.660},\n  url = {https://doi.org/10.1103%2Fphysrev.97.660},\n  year  = {1955},\n  month = {feb},\n  publisher = {American Physical Society ({APS})},\n  volume = {97},\n  number = {3},\n  pages = {660--665},\n  author = {R. P. Feynman},\n  title = {Slow Electrons in a Polar Crystal},\n  journal = {Physical Review}\n}\n\n% Schultz seemed to spend his PhD solving the Feynman polaron problem with\n% a digital computer.\n% Lots of characterisation of the polaron state, and the introduction of an\n% effective polaron size, from considering the variance of the Gaussian\n% wavefunction.\n% Some work towards polaron mobility, but not as developed as in Feynman et al. 1962.\n% Schultz provides units for some of the quantities - which is useful!\n@article{Schultz1959,\n  doi = {10.1103/physrev.116.526},\n  url = {https://doi.org/10.1103%2Fphysrev.116.526},\n  year  = {1959},\n  month = {nov},\n  publisher = {American Physical Society ({APS})},\n  volume = {116},\n  number = {3},\n  pages = {526--543},\n  author = {T. D. Schultz},\n  title = {Slow Electrons in Polar Crystals: Self-Energy,  Mass,  and Mobility},\n  journal = {Physical Review}\n}\n\n% Free-energies of the finite interacting Polaron system.\n@article{Osaka1961,\n  doi = {10.1143/ptp.25.517},\n  url = {https://doi.org/10.1143%2Fptp.25.517},\n  year  = {1961},\n  month = {apr},\n  publisher = {Oxford University Press ({OUP})},\n  volume = {25},\n  number = {4},\n  pages = {517--536},\n  author = {Yukio \\=Osaka},\n  title = {Theory of Polaron Mobility},\n  journal = {Progress of Theoretical Physics}\n}\n\n% Original statement of the Polaron problem + Frohlich Hamiltonian.\n@article{Frohlich1952,\n  doi = {10.1098/rspa.1952.0212},\n  url = {https://doi.org/10.1098%2Frspa.1952.0212},\n  year  = {1952},\n  month = {dec},\n  publisher = {The Royal Society},\n  volume = {215},\n  number = {1122},\n  pages = {291--298},\n  author = {H. Frohlich},\n  title = {Interaction of Electrons with Lattice Vibrations},\n  journal = {Proceedings of the Royal Society A: Mathematical,  Physical and Engineering Sciences}\n}\n\n@article{Thornber1970,\n  doi = {10.1103/physrevb.1.4099},\n  url = {https://doi.org/10.1103%2Fphysrevb.1.4099},\n  year  = {1970},\n  month = {may},\n  publisher = {American Physical Society ({APS})},\n  volume = {1},\n  number = {10},\n  pages = {4099--4114},\n  author = {K. K. Thornber and Richard P. Feynman},\n  title = {Velocity Acquired by an Electron in a Finite Electric Field in a Polar Crystal},\n  journal = {Physical Review B}\n}\n","category":"page"}]
}
